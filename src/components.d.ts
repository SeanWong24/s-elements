/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface SBadge {
    }
    interface SButton {
        "fill": 'default' | 'outline' | 'clear';
    }
    interface SCard {
    }
    interface SInput {
        "placeholder": string;
        "value": string;
    }
    interface SPopover {
        "isHidden": boolean;
    }
    interface SToggle {
        "checked": boolean;
        "scale": number;
    }
}
declare global {
    interface HTMLSBadgeElement extends Components.SBadge, HTMLStencilElement {
    }
    var HTMLSBadgeElement: {
        prototype: HTMLSBadgeElement;
        new (): HTMLSBadgeElement;
    };
    interface HTMLSButtonElement extends Components.SButton, HTMLStencilElement {
    }
    var HTMLSButtonElement: {
        prototype: HTMLSButtonElement;
        new (): HTMLSButtonElement;
    };
    interface HTMLSCardElement extends Components.SCard, HTMLStencilElement {
    }
    var HTMLSCardElement: {
        prototype: HTMLSCardElement;
        new (): HTMLSCardElement;
    };
    interface HTMLSInputElement extends Components.SInput, HTMLStencilElement {
    }
    var HTMLSInputElement: {
        prototype: HTMLSInputElement;
        new (): HTMLSInputElement;
    };
    interface HTMLSPopoverElement extends Components.SPopover, HTMLStencilElement {
    }
    var HTMLSPopoverElement: {
        prototype: HTMLSPopoverElement;
        new (): HTMLSPopoverElement;
    };
    interface HTMLSToggleElement extends Components.SToggle, HTMLStencilElement {
    }
    var HTMLSToggleElement: {
        prototype: HTMLSToggleElement;
        new (): HTMLSToggleElement;
    };
    interface HTMLElementTagNameMap {
        "s-badge": HTMLSBadgeElement;
        "s-button": HTMLSButtonElement;
        "s-card": HTMLSCardElement;
        "s-input": HTMLSInputElement;
        "s-popover": HTMLSPopoverElement;
        "s-toggle": HTMLSToggleElement;
    }
}
declare namespace LocalJSX {
    interface SBadge {
    }
    interface SButton {
        "fill"?: 'default' | 'outline' | 'clear';
    }
    interface SCard {
    }
    interface SInput {
        "onSChange"?: (event: CustomEvent<string>) => void;
        "onSInput"?: (event: CustomEvent<InputEvent>) => void;
        "placeholder"?: string;
        "value"?: string;
    }
    interface SPopover {
        "isHidden"?: boolean;
    }
    interface SToggle {
        "checked"?: boolean;
        "onSChange"?: (event: CustomEvent<boolean>) => void;
        "scale"?: number;
    }
    interface IntrinsicElements {
        "s-badge": SBadge;
        "s-button": SButton;
        "s-card": SCard;
        "s-input": SInput;
        "s-popover": SPopover;
        "s-toggle": SToggle;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "s-badge": LocalJSX.SBadge & JSXBase.HTMLAttributes<HTMLSBadgeElement>;
            "s-button": LocalJSX.SButton & JSXBase.HTMLAttributes<HTMLSButtonElement>;
            "s-card": LocalJSX.SCard & JSXBase.HTMLAttributes<HTMLSCardElement>;
            "s-input": LocalJSX.SInput & JSXBase.HTMLAttributes<HTMLSInputElement>;
            "s-popover": LocalJSX.SPopover & JSXBase.HTMLAttributes<HTMLSPopoverElement>;
            "s-toggle": LocalJSX.SToggle & JSXBase.HTMLAttributes<HTMLSToggleElement>;
        }
    }
}
